{"version":3,"sources":["component/task.jsx","component/todoList.jsx","component/modal.jsx","component/font/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["TaskList","styled","div","Task","this","props","task","onDelete","list","handleChooseEdit","indexTask","isEditing","handleCancelEdit","handleTaskContent","handleEdit","index","draggableId","id","isDragDisabled","provided","className","draggableProps","dragHandleProps","ref","innerRef","type","defaultValue","content","onChange","e","icon","onClick","time","Component","StyledList","List","handleToggelModal","isEdit","droppableId","droppableProps","style","width","height","tasks","length","title","map","Modal","onSelect","onShow","selected","taskContent","onAddTask","lists","cursor","checked","value","name","placeholder","library","add","faTimes","faEdit","faPlus","faTrashAlt","faCalendarAlt","faCheck","faWindowClose","App","state","isShow","editId","listId","setState","handleSelected","target","handleAddTask","preventDefault","trim","toastr","warning","timeOut","newTask","uuidv1","Date","toLocaleString","indexList","findIndex","push","localStorage","setItem","JSON","stringify","handleDeleteTask","taskId","getlists","parse","getItem","newTasks","filter","handleDragSave","result","source","destination","reason","sourceListIndex","taskChooses","taskIndex","splice","destinationListIndex","textAlign","onDragEnd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d2c261f.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\n\r\nconst TaskList = styled.div`\r\n    font-size: 14px;\r\n    font-family: sans-serif;\r\n    margin-top: 12px;\r\n    padding: 8px 8px;\r\n    border: 1px solid #e5d5d5;\r\n    background-color: #ffff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16);\r\n    \r\n\r\n    @keyframes fadein {\r\n    from {\r\n        opacity:0;\r\n    }\r\n    to {\r\n        opacity:1;\r\n    }\r\n}\r\n    cursor: pointer;\r\n    .list__task-time{\r\n        display: flex;\r\n        align-items: center;\r\n        opacity: .6;\r\n        font-family: 'Ubuntu', sans-serif;\r\n        animation: fadein 2s;\r\n        .list__task-item-icon {\r\n            margin-right: 12px;\r\n        }\r\n    }\r\n    .list__task-content{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 8px 0;\r\n        transition: all .3s ease; \r\n        animation: fadein 2s;\r\n        .list__task-content-text{\r\n            width: 80%;\r\n            font-weight: bold;\r\n            font-size: 18px;\r\n            word-wrap: break-word;      /* IE 5.5-7 */\r\n            white-space: -moz-pre-wrap; /* Firefox 1.0-2.0 */\r\n            white-space: pre-wrap; \r\n        }\r\n        .list__task-content-options{\r\n            display: flex;\r\n            align-items: center;\r\n            flex : 1;\r\n            justify-content: space-around;\r\n            .options-edit{\r\n                color: #4ab7f7;\r\n                \r\n            }\r\n            .options-delete{\r\n                color: #bdbdc4;\r\n                \r\n                &:hover{\r\n                color: #f13636;\r\n            }\r\n            }\r\n            \r\n        }\r\n    }\r\n    .list__task-edit{\r\n        display: flex;\r\n        flex-grow: 2; \r\n        align-items: center;\r\n        justify-content: space-between;\r\n        animation: fadein 2s;\r\n        .list__task-editor{\r\n            width: 80%;\r\n            z-index: 999;\r\n           .list__task-editing{\r\n               width: 100%;\r\n               padding: 0 8px;\r\n               outline: none;\r\n               border: #4ab7f7 solid 1px;\r\n               border-radius: 2px;\r\n               z-index: 999;\r\n               transition: z-index all .5s; \r\n               &:focus{\r\n                     border: #ee1f1f solid 1px;\r\n           }\r\n           }\r\n          \r\n        }\r\n        .list__task-edit-options{\r\n            display: flex;\r\n            flex: 1;\r\n            align-items: center;\r\n            justify-content: space-around;\r\n            font-size: 14px;\r\n            z-index: 999;\r\n        }\r\n    }\r\n    .list__editing-bgr{\r\n        position: fixed;\r\n        z-index: 1;\r\n        top: 0;\r\n        left: 0;\r\n        background-color: rgba(247, 248, 254, 0.8);\r\n        width: 100vw;\r\n        height: 100vh;\r\n        animation: fadein .3s;\r\n       \r\n    }\r\n\r\n`;\r\n\r\nclass Task extends Component {\r\n    render() { \r\n        const {task, onDelete, list, handleChooseEdit, indexTask, isEditing, handleCancelEdit, handleTaskContent, handleEdit} = this.props;\r\n        \r\n        return ( \r\n            <Draggable\r\n            index= {indexTask}\r\n            draggableId= {task.id}\r\n            isDragDisabled= {isEditing}\r\n        >\r\n            {\r\n                provided => (\r\n                    <TaskList className=\"list__task\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                        >\r\n                    {\r\n                        isEditing\r\n                        ? <Fragment>\r\n                             <div className=\"list__task-edit\">\r\n                            <div className=\"list__task-editor\">\r\n                                <input type=\"text\" className=\"list__task-editing\" defaultValue={task.content} onChange={(e)=>handleTaskContent(e)}/>\r\n                            </div>\r\n                             <div className=\"list__task-edit-options\">\r\n                            <div className=\"edit-options-close\">\r\n                                 <FontAwesomeIcon icon=\"check\" className=\"icon text-primary\" onClick={()=>handleEdit(task.id, indexTask, list.id)}/>\r\n                             </div>\r\n                             <div className=\"edit-options-close\" onClick={handleCancelEdit}>\r\n                                 <FontAwesomeIcon icon=\"window-close\" className=\"icon text-danger\"/>\r\n                             </div>\r\n                         </div>\r\n                         <div className=\"list__editing-bgr\" onClick={handleCancelEdit}></div>\r\n                     </div>\r\n                        </Fragment>\r\n                     : <Fragment>\r\n                          <div className=\"list__task-time\">\r\n                       <div className=\"list__task-item-icon\">\r\n                            <FontAwesomeIcon icon=\"calendar-alt\"/>\r\n                       </div>\r\n                        <div className=\"list__task-time-text\">\r\n                            {task.time}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list__task-content\">\r\n                        <div className=\"list__task-content-text\">\r\n                            {task.content}\r\n                        </div>\r\n                        <div className=\"list__task-content-options\">\r\n                           <div className=\"options-edit\"  onClick= {()=>handleChooseEdit(task.id )}>\r\n                                <FontAwesomeIcon icon=\"edit\" />\r\n                           </div>\r\n                            <div className=\"options-delete\" onClick= {()=>onDelete(task.id, list.id)} >\r\n                                <FontAwesomeIcon icon=\"trash-alt\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                     </Fragment>\r\n                    }\r\n                   \r\n                </TaskList>\r\n                )\r\n            }\r\n        </Draggable>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Task;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { Component } from 'react';\r\nimport Task from './task';\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nconst StyledList = styled.div `\r\n    height: auto;\r\n    border: 1px solid #c3cbf7;\r\n    background-color: #f7f8fe;\r\n    border-radius: 6px;\r\n    padding: 8px 8px;\r\n\r\n    .List__header{\r\n       width: 100%;\r\n       \r\n       box-sizing:border-box;\r\n       .List__title{\r\n          \r\n            .List__item-count{\r\n                display:block;\r\n                width: 38px;\r\n                border-radius: 50%;\r\n                text-align: center;\r\n                margin-right: 8px;\r\n            }\r\n            .List__item-text{\r\n                font-family: sans-serif;\r\n                letter-spacing:1px;\r\n                font-weight: bold;\r\n            }\r\n       }\r\n       \r\n    }\r\n    .List__content{\r\n        width: 100%;\r\n        padding: 24px 14px\r\n        \r\n    }\r\n`;\r\n\r\nclass List extends Component {\r\n    \r\n    render() { \r\n        const { list, handleToggelModal, onDelete, handleChooseEdit, isEdit, handleCancelEdit, handleTaskContent,handleEdit } = this.props;\r\n        \r\n        return ( \r\n            <StyledList className=\"col-sm m-2 no-gutter d-flex flex-column align-items-center\">\r\n                <Droppable droppableId={list.id}> \r\n                    {\r\n                        provided =>(\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps} style={{width : '100%', height: 'auto'}}\r\n                            >\r\n                                \r\n                                     <div className=\"List__header d-flex justify-content-between align-items-center\" >\r\n                                     <div className=\"List__title d-flex align-items-center\" >\r\n                                         <div className=\"List__item-count btn btn-success\"><span>{list.tasks.length}</span></div>\r\n                                         <div className=\"List__item-text\">{list.title}</div>\r\n                                     </div>\r\n                                     <div className=\"List__add\">\r\n                                         <button className=\"List__btn btn btn-primary\"  onClick={()=>handleToggelModal(list.id)}><FontAwesomeIcon icon=\"plus\" /> New Task</button>\r\n                                     </div>\r\n                                 </div>\r\n                                  <div className=\"List__content\">\r\n                                     {\r\n                                         list.tasks.map((task, indexTask)=>\r\n                                             <Task\r\n                                                 key ={task.id}\r\n                                                 task = {task}\r\n                                                 onDelete = {onDelete}\r\n                                                 list= {list}\r\n                                                 handleChooseEdit= {handleChooseEdit}\r\n                                                 indexTask= {indexTask}\r\n                                                 handleToggelModal={handleToggelModal}\r\n                                                 isEditing= {task.id === isEdit }\r\n                                                 handleCancelEdit= {handleCancelEdit}\r\n                                                 handleTaskContent={handleTaskContent}\r\n                                                 handleEdit= {handleEdit}\r\n                                             />    \r\n                                             )\r\n                                     }\r\n                                  </div>\r\n                                \r\n                            </div>\r\n                        )\r\n                    }\r\n                </Droppable>\r\n            </StyledList>\r\n         );\r\n    }\r\n}\r\n \r\n\r\n\r\n\r\nexport default List;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { Component } from 'react'\r\n\r\nclass Modal extends Component {\r\n    render() { \r\n        const  {onSelect, onShow, handleToggelModal, selected, handleTaskContent, taskContent, onAddTask, lists} = this.props;\r\n        return ( \r\n            <div className={`modal fade ${onShow}`}  >\r\n                <div className={`modal_body ${onShow}`}>\r\n                    <div className=\"modal-content\" >\r\n                        <div className=\"modal-header d-flex align-items-center\">\r\n                            <span className=\"modal-title\">CREATE NEW TASK</span>\r\n                            <FontAwesomeIcon icon=\"times\" style={{cursor:\"pointer\"}}  onClick={handleToggelModal} />\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                            <div className=\"form-group d-flex align-items-center justify-content-between\">\r\n                                {   \r\n                                    \r\n                                    lists.map(list =>     \r\n                                        <div key={list.id} className=\"d-flex align-items-center justify-content-between\">\r\n                                            <input type=\"radio\" checked={selected === list.id } onChange={ ()=> onSelect(list.id)}  value={list.title} id={list.id} name=\"select\" /> \r\n                                            <span className=\"m-2\" >{list.title}</span>\r\n                                        </div>\r\n                                    )\r\n                                    \r\n                                }\r\n                                {/* <div><input type=\"radio\" checked={onSelect = 'td'} id=\"todo\" name=\"select\" value=\"todo\"/> TODO</div>\r\n                                <div><input type=\"radio\" checked={onSelect = 'ip'} id=\"in\" name=\"select\" value=\"in\" /> IN</div>\r\n                                <div><input type=\"radio\" checked={onSelect = ''} id=\"done\" name=\"select\" value=\"done\"/> DONE</div> */}\r\n                           </div>\r\n                           <div className=\"modal-input\">\r\n                                <div className=\"form-group\"><input type=\"text\" placeholder=\"Enter your task\" value={taskContent} onChange={(e)=>handleTaskContent(e)} className=\"form-control\"/></div>\r\n                           </div>\r\n                           <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-info\" onClick={(e)=>onAddTask(e)} >Save</button>\r\n                                <button type=\"button\" className=\"btn btn-outline-dark\" onClick={handleToggelModal} >Close</button>\r\n                            </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Modal;","import {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {faEdit, faPlus, faTrashAlt, faTimes, faCalendarAlt, faCheck, faWindowClose} from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faTimes, faEdit, faPlus, faTrashAlt, faCalendarAlt, faCheck,faWindowClose);","import React, { Component } from 'react'\nimport './App.css';\nimport List from './component/todoList';\nimport Modal from './component/modal';\nimport './component/font';\nimport toastr from 'toastr';\nimport 'toastr/build/toastr.min.css';\nimport {v1 as uuidv1} from 'uuid';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\n\nclass App extends Component {\n  state = { \n    lists : [\n      {\n        id: 'td', title: \"TODO\", tasks: []\n      },\n      {\n        id: 'ip', title: \"IN\", tasks: []\n      },\n      {\n        id: 'de', title: \"DONE\", tasks: []\n      }\n      \n    ],\n    taskContent: '',\n    isShow :'',\n    selected: '',\n    editId: null\n   }\n  componentDidMount() {\n    const lists = localStorage.getItem('lists');\n    if(lists){\n      this.setState({\n        lists: JSON.parse(lists)\n      })\n    }\n  }\n\n  handleToggelModal = (listId )=> {\n      const isShow = this.state.isShow === '' ? 'show' : '';\n      this.setState({\n        isShow : isShow,\n        selected : listId\n      });\n      \n  }\n  handleSelected = selected =>{\n    this.setState({ selected: selected })\n  }\n\n  handleTaskContent = (e) =>{\n    const taskContent = this.state.taskContent;\n    this.setState({ taskContent : e.target.value});\n   \n  }\n\n  handleAddTask = (e) =>{\n    e.preventDefault();\n    const { taskContent, selected } = this.state ;\n   \n    if(taskContent.trim() ===''){\n       toastr.warning('Please enter your task', 'Notice', { timeOut: 2000 });\n    }else{\n      const newTask = \n      {\n        id: uuidv1(),\n        content: taskContent,\n        time: new Date().toLocaleString()\n      }\n      \n    const indexList = this.state.lists.findIndex(list => list.id ===selected);\n    let lists = [...this.state.lists]; \n    let tasks = lists[indexList].tasks;\n    tasks.push(newTask);\n    this.setState({\n      lists: lists,\n      taskContent: '',\n      isShow: '',\n      selected: '',\n    }, ()=>{\n      localStorage.setItem('lists',JSON.stringify(lists));\n    });\n    \n    } \n  }\n\n  handleDeleteTask=(taskId, indexList)=>{\n    const getlists = JSON.parse(localStorage.getItem('lists'));\n    const index = getlists.findIndex(list => list.id === indexList );\n    let lists = [...getlists];\n    let newTasks = lists[index].tasks.filter(task=> task.id !== taskId);\n    lists[index].tasks =newTasks;\n    \n    localStorage.setItem('lists',JSON.stringify(lists));\n    this.setState({\n      lists: lists,\n      taskContent: '',\n      isShow :'',\n      selected: ''\n    })\n    \n  }\n  \n  handleChooseEdit = (taskId)=>{\n      this.setState({\n        editId: taskId,\n        \n      })\n     \n  }\n  handleEdit = (taskId, indexTask, listId)=>{\n    const { taskContent } = this.state;\n    if(taskContent.trim() ===''){\n      toastr.warning('Please enter your task', 'Notice', { timeOut: 2000 });\n   }else{\n      \n      const indexList = this.state.lists.findIndex(list => list.id ===listId);\n      let lists = [...this.state.lists];\n      let tasks = lists[indexList].tasks;\n      tasks[indexTask].content = taskContent;\n      \n      localStorage.setItem('lists', JSON.stringify(lists));\n      this.setState({\n        lists: lists,\n        editId: null\n      })\n\n   }\n   \n  }\n  handleCancelEdit = ()=>{\n    this.setState({\n      editId: null,\n      taskContent: ''\n    })\n  }\n\n  handleDragSave =(result)=>{\n    const { source, destination, reason } = result;\n      if(reason === 'DROP' && destination){\n        const { lists } = this.state;\n        const sourceListIndex = lists.findIndex(list=> list.id === source.droppableId);\n        const taskChooses = lists[sourceListIndex];\n        const taskIndex = taskChooses.tasks.findIndex((task, indexTask)=> indexTask === source.index);\n        const task = taskChooses.tasks[taskIndex];\n        taskChooses.tasks.splice([taskIndex],1);\n        \n        const destinationListIndex = lists.findIndex(list => list.id === destination.droppableId);\n      \n        const taskTo = lists[destinationListIndex];\n        taskTo.tasks.splice(destination.index,0,task);\n        localStorage.setItem('lists',JSON.stringify(lists));\n        this.setState({\n          lists: lists\n        })\n      }\n  }\n  render() { \n    const { lists } = this.state;\n    \n    return ( \n          <div className=\"container\">\n            <h1 className=\"container__title text-primary font-weight-bold\" style={{textAlign: \"center\"}}>TODO LIST</h1>\n            <DragDropContext onDragEnd={this.handleDragSave}>\n            <div className=\"container__content row\"> \n                  {       \n                   \n                     lists.map(list => (\n                      <List\n                      key={list.id}\n                      handleToggelModal = {this.handleToggelModal} \n                      list= {list}\n                      onShow ={this.state.isShow} \n                      isEdit ={this.state.editId}\n                      onDelete={this.handleDeleteTask}\n                      handleChooseEdit= {this.handleChooseEdit}\n                      handleCancelEdit= {this.handleCancelEdit}\n                      handleTaskContent= {this.handleTaskContent}\n                      handleEdit= {this.handleEdit}\n                      >\n  \n                      </List>\n                    ))\n                    \n                }\n            </div>\n            </DragDropContext>\n            {<Modal \n                handleToggelModal = {this.handleToggelModal}  \n                onShow ={this.state.isShow} \n                onSelect={this.handleSelected} \n                lists={this.state.lists} \n                selected={this.state.selected}\n                taskContent={this.state.taskContent}\n                handleTaskContent={this.handleTaskContent}\n                onAddTask={this.handleAddTask} />}\n          </div>\n     );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}